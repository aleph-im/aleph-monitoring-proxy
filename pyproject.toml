[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "monitoring-proxy"
dynamic = ["version"]
description = "Expose custom endpoints for monitoring"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Hugo Herter", email = "git@hugoherter.com"}
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Environment :: Web Environment",
]
dependencies = [
    "fastapi",
    "aiohttp",
    "uvicorn",
]

[tool.hatch.build.targets.sdist]
include = ["src/**"]

[tool.hatch.build.targets.wheel]
include = ["src/**"]

# Launch app using `uvicorn monitoring_proxy:app` using script
[tool.hatch.scripts]
monitoring-proxy = "uvicorn monitoring_proxy:app --reload"

[tool.hatch.envs.testing]
type = "virtual"
dependencies = [
  "pytest==8.2.1",
  "pytest-cov==5.0.0",
  "pytest-mock==3.14.0",
  "pytest-asyncio==0.23.7",
  "pytest-aiohttp==1.0.5",
    "aioresponses",
    "httpx",
]
[tool.hatch.envs.testing.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --durations=10 --cov  {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]


[tool.hatch.envs.linting]
detached = true
dependencies = [
  "black",
  "mypy",
  "ruff",
  "isort",
  "fastapi",
  "aiohttp",
    "pytest",
    "aioresponses",
]
[tool.hatch.envs.linting.scripts]
typing = "mypy {args:.}"
style = [
  "ruff check {args:.}",
  "black --check --diff {args:.}",
  "isort --check-only --profile black {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff check --fix {args:.}",
  "isort --profile black {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.mypy]
python_version = "3.11"
install_types = true
non_interactive = true
explicit_package_bases = true
check_untyped_defs = true
mypy_path = "src"

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
testpaths = [
  "tests"
]

[tool.coverage.report]
fail_under = 100

[tool.coverage.paths]
aleph_vm = ["src/monitoring_proxy"]
tests = ["tests", "src/monitoring_proxy"]
